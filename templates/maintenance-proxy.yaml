# Copyright 2021 The Province of British Columbia
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  annotations:
    description: |
      Deployment template for the RocketChat reverse proxy.
  name: maintenance-proxy
objects:
  - apiVersion: v1
    kind: Route
    metadata:
      labels:
        app: maintenance-proxy
      name: maintenance-proxy
    spec:
      host: ${SOURCE_HOST_NAME}
      port:
        targetPort: 2015-tcp
      tls:
        termination: edge
      to:
        kind: Service
        name: maintenance-proxy
        weight: 100
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      name: maintenance-proxy-config
      labels:
        app: maintenance-proxy
    data:
      Caddyfile: |
        http://${SOURCE_HOST_NAME}:2015 {
            reverse_proxy * https://${DESTINATION_HOST_NAME} {
                header_up Host {http.reverse_proxy.upstream.hostport}
                header_up Sec-WebSocket-Protocol {>Sec-WebSocket-Protocol}
                header_up X-Real-IP {remote_host}
                header_up X-Forwarded-For {remote_host}
                header_up X-Forwarded-Proto {scheme}
                #header_up Connection {>Connection}
                #header_up Upgrade {>Upgrade}
                flush_interval -1
            }
            respond /ehlo 200

            log {
                # errors stdout
                output stdout 
                #format single_field common_log
                level DEBUG
          }
        }

        :2015 {
            respond /ehlo 200
            
            log {
              # errors stdout
              output stdout 
              #format single_field common_log
              level DEBUG
          }
        }
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: maintenance-proxy
      name: maintenance-proxy
    spec:
      selector:
        role: proxy
      ports:
        - name: 2015-tcp
          port: 2015
          protocol: TCP
          targetPort: 2015
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      labels:
        app: maintenance-proxy
      name: maintenance-proxy
    spec:
      strategy:
        type: Rolling
      triggers:
        - type: ConfigChange
      replicas: ${{REPLICA_COUNT}}
      selector:
        role: proxy
      template:
        metadata:
          labels:
            app: maintenance-proxy
            role: proxy
          name: maintenance-proxy
        spec:
          containers:
            - name: maintenance-proxy
              imagePullPolicy: Always
              image: "caddy:latest"
              env:
                - name: XDG_DATA_HOME
                  value: /tmp
              startupProbe:
                httpGet:
                  path: /ehlo
                  port: 2015
                  scheme: HTTP
                failureThreshold: 5
                periodSeconds: 3
              readinessProbe:
                httpGet:
                  path: /ehlo
                  port: 2015
                timeoutSeconds: 10
              ports:
                - containerPort: 2015
              resources:
                limits:
                  cpu: 100m
                  memory: 92Mi
                requests:
                  cpu: 30m
                  memory: 48Mi
              volumeMounts:
                - name: config-vol
                  mountPath: /etc/caddy/Caddyfile
                  subPath: Caddyfile
          volumes:
            - name: config-vol
              configMap:
                name: maintenance-proxy-config
          # imagePullSecrets:
          #   - name: bcdevops-dockercfg
parameters:
  - name: DESTINATION_HOST_NAME
    displayName: Redirect Destination
    description:
      The destination address that is being proxied.
    required: true
  - name: SOURCE_HOST_NAME
    displayName: Front Door Route
    description: |
      The route that will be redirected to the destination URL.
    required: true
  - name: REPLICA_COUNT
    description: The number of PROXY pods to start
    displayName: Replica Count
    value: 1
